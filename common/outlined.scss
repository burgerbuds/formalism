@import './core';

// ================================
// Outlined Variables
// ================================

// Variables > Labels
$fo-label-scale: 0.9 !default;

// Variables > Field padding
$fo-field-padding-vertical: 1.1em !default;
$fo-field-padding-horizontal: 0.9em !default;

// Variables > Field padding fine tuning
$fo-field-padding-top: $fo-field-padding-vertical * 1.1 !default;
$fo-field-padding-bottom: $fo-field-padding-vertical !default;
$fo-field-padding-left: $fo-field-padding-horizontal !default;
$fo-field-padding-right: $fo-field-padding-horizontal !default;

// Variables > Border
$fo-border-radius: 0.25em !default;

// Variables > Indicator
$fo-indicator-required-top: 0.2em !default;
$fo-indicator-required-right: 0.4em !default;
$fo-indicator-optional-top: .5em !default;
$fo-indicator-optional-right: .5em !default;
$fo-indicator-optional-letter-spacing: .02em !default;

// Variables > Messages
$fo-message-margin: 0.5em 0 0 0 !default;
$fo-message-margin-inset: 0.5em 0 0 0.5em !default;

// ================================
// Outlined mixins
// ================================

@mixin fo-field($block) {
    #{$block}__field {
        color: $f-text-color;
        background-color: $f-bg-color;
        border: $f-border-width solid $f-border-color;
        border-radius: $fo-border-radius;
        transition: transition(border-color), transition(box-shadow);
        will-change: border-color, box-shadow;
        padding: $fo-field-padding-top $fo-field-padding-right
            $fo-field-padding-bottom $fo-field-padding-left;
        box-shadow: inset 0 0 0
            calc(#{$f-border-width-focus} - #{$f-border-width})
            $f-bg-color;

        &:hover {
            border-color: $f-border-color-hover;
        }

        &:focus {
            border-color: $f-border-color-focus;
            box-shadow: inset 0 0 0
                calc(#{$f-border-width-focus} - #{$f-border-width})
                $f-border-color-focus;
        }

        &:disabled {
            border-color: $f-border-color-disabled;
            color: $f-disabled-color;
        }

        // Autofill > Default / Hover
        &:-webkit-autofill,
        &:-webkit-autofill:hover {
            -webkit-box-shadow: 0 0 0 10em $f-bg-color inset !important;
        }

        // Autofill > Focus / Active
        &:-webkit-autofill:focus,
        &:-webkit-autofill:active {
            -webkit-box-shadow: inset 0 0 0
                    calc(#{$f-border-width-focus} - #{$f-border-width})
                    $f-border-color-focus,
                inset 0 0 0 10em $f-bg-color !important;
        }

        @content;
    }

    // Field > Error
    &#{$f-modifier-error} #{$block}__field {
        border-color: $f-border-color-error;
        box-shadow: inset 0 0 0
            calc(#{$f-border-width-error} - #{$f-border-width})
            $f-border-color-error;

            &:-webkit-autofill:focus,
            &:-webkit-autofill:active {
                -webkit-box-shadow: inset 0 0 0
                        calc(#{$f-border-width-focus} - #{$f-border-width})
                        $f-border-color-error,
                    inset 0 0 0 10em $f-bg-color !important;
            }
    }
}

@mixin fo-label($block) {
    #{$block}__label {
        position: absolute;
        display: flex;
        align-items: center;
        pointer-events: none;
        padding-top: $fo-field-padding-top;
        padding-bottom: $fo-field-padding-bottom;
        z-index: 1; // Place above field icons

        // Interactions
        transition: transition(transform);
        will-change: transform;
        transform-origin: top left;

        @content;
    }

    // Label > Error
    &#{$f-modifier-error} #{$block}__field + #{$block}__label,
    // Label > Focus
    #{$block}__field:focus + #{$block}__label,
    // Label > Filled
    #{$block}__field#{$f-modifier-filled} + #{$block}__label {
        transform: translateY(-$fo-field-padding-top);
    }
}

@mixin fo-label-text($block) {
    #{$block}__label-text {
        display: block;
        position: relative;

        // Interactions
        transition: transition(transform), transition(color),
            transition(letter-spacing);
        will-change: transform, color;
        transform-origin: center left;
        transform: translateY(0) scale(1);

        // Label background line mask
        &:before {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            left: -0.35em;
            right: -0.35em;
            z-index: -1;
            background-color: $f-bg-color;
            will-change: transform;
        }

        @content;
    }

    // Selector alias > Not error nor disabled
    $field-normal: '&:not(#{$f-modifier-error}) #{$block}__field:not(:disabled)';

    // Label text > Filled (not hover/focus)
    #{$field-normal}#{$f-modifier-filled}:not(:focus):not(:hover)
        + #{$block}__label
        #{$block}__label-text {
        color: $f-label-color-filled;
    }

    // Label text > Hover
    #{$field-normal}:hover + #{$block}__label #{$block}__label-text {
        color: $f-label-color-hover;
    }

    // Label text > Focus
    #{$field-normal}:focus + #{$block}__label #{$block}__label-text {
        color: $f-label-color-focus;
    }

    // Label text > Error
    &#{$f-modifier-error}
        #{$block}__field
        + #{$block}__label
        #{$block}__label-text {
        color: $f-error-color;
    }

    // Label text > Error
    &#{$f-modifier-error} #{$block}__field + #{$block}__label #{$block}__label-text,
    // Label text > Focus
    #{$block}__field:focus + #{$block}__label #{$block}__label-text,
    // Label text > Filled
    #{$block}__field#{$f-modifier-filled} + #{$block}__label #{$block}__label-text {
        transform: translateY(-50%) translateY(floor(-$f-border-width/2))
            scale($fo-label-scale);
    }
}

@mixin fo-indicator($block) {
    // Indicator
    #{$block}__indicator {
        position: absolute;
        transition: transition(color);
        will-change: color;

        &--optional {
            top: $fo-indicator-optional-top;
            right: $fo-indicator-optional-right;
            letter-spacing: $fo-indicator-optional-letter-spacing;
        }

        &--required {
            top: $fo-indicator-required-top;
            right: $fo-indicator-required-right;
        }

        @content;
    }

    // Selector alias > Not error nor disabled
    $field-normal: '&:not(#{$f-modifier-error}) #{$block}__field:not(:disabled)';

    // Label text > Filled (not hover/focus)
    #{$field-normal}#{$block}__field#{$f-modifier-filled}:not(:focus):not(:hover)
    ~ #{$block}__indicator {
        color: $f-border-color;
    }

    // Label text > Hover
    #{$field-normal}:hover ~ #{$block}__indicator {
        color: $f-border-color-hover;
    }

    // Label text > Focus
    #{$field-normal}:focus ~ #{$block}__indicator {
        color: $f-border-color-focus;
    }

    // Indicator > Error
    &#{$f-modifier-error} #{$block}__field ~ #{$block}__indicator,
    &#{$f-modifier-error} #{$block}__field:hover ~ #{$block}__indicator {
        color: $f-border-color-error;
    }
}

@mixin fo-message($block) {
    #{$block}__message {
        @content;
    }
}
