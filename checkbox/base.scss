// ================================
// Checkbox Base
// The base styles for themes
// ================================

// Imports
@import './../common/core';

// Variables > General
$f-checkbox--size: 1em !default;
$f-checkbox--spacing: 0.75em !default;
$f-checkbox--transition-duration: $f-transition-duration * 1.5 !default;
$f-checkbox--has-animation: true !default;

// Variables > Check
$f-checkbox--tick-position: -0.25em, 0em !default; // translate(x, y) fine tuning

// Variables > Label
$f-checkbox--label-line-height: 1 !default;

@include f-base(
    $block: '.f-checkbox',
);

@include f-inner(
    $block: '.f-checkbox',
) {
    display: inline-flex;
    flex-wrap: nowrap;
    align-items: center;
};

// Inside
@include f-inside(
    $block: '.f-checkbox',
) {
    content: '';
    display: block;
    font-size: $f-checkbox--size;
    transform: scaleX(-1) translate($f-checkbox--tick-position)
        rotate(135deg);
    transform-origin: top left;
    visibility: hidden;
    transition: transition(color);
    will-change: color, width, height;
    position: absolute;
    left: 0;
    top: 50%;
};

// Inside > Not disabled + Error
@include f-inside(
    $block: '.f-checkbox',
    $state: ':not(:disabled)',
    $error: true,
) {
    color: $f-border-color-error;
};

// Inside > Disabled
@include f-inside(
    $block: '.f-checkbox',
    $state: ':disabled',
) {
    color: $f-border-color-disabled;
};

// Inside > Checked
@include f-inside(
    $block: '.f-checkbox',
    $state: ':checked'
) {
    visibility: visible;

    @if ($f-checkbox--has-animation) {
        // TODO: Fix broken animation in IE
        animation: f-checkbox $f-checkbox--transition-duration forwards;
        // Not 60fps but unavoidable as we need to animate the width and height
        @keyframes f-checkbox {
            0% {
                height: 0;
                width: 0;
            }
            25% {
                height: 0;
                width: 0.35em;
            }
            50%,
            100% {
                height: 0.7em;
                width: 0.35em;
            }
        }
    } @else {
        height: 0.7em;
        width: 0.35em;
    }
};

// Outside
@include f-outside(
    $block: '.f-checkbox',
) {
    content: '';
    display: block;
    font-size: $f-checkbox--size;
    margin-right: $f-checkbox--spacing;
    width: 1.2em;
    height: 1.2em;
    display: block;
    transition: transition(color);
    will-change: color;
    flex-shrink: 0;
};

// Outside > Not disabled + Error
@include f-outside(
    $block: '.f-checkbox',
    $state: ':not(:disabled)',
    $error: true,
) {
    color: $f-border-color-error;
};

// Outside > Disabled
@include f-outside(
    $block: '.f-checkbox',
    $state: ':disabled',
) {
    color: $f-border-color-disabled;
};

// Label
@include f-label(
    $block: '.f-checkbox',
) {
    color: inherit;
    position: relative;
    display: flex;
    align-items: center;
    flex-wrap: nowrap;
};

// Label > Not disabled
// @include f-label(
//     $block: '.f-checkbox',
//     $state: ':not(:disabled)'
// ) {
//     cursor: pointer;
// };

// Label text
@include f-label-text(
    $block: '.f-checkbox',
) {
    line-height: $f-checkbox--label-line-height;
};

@include f-field(
    $block: '.f-checkbox',
) {
    clip: rect(1px, 1px, 1px, 1px); // Allows tabbing still
    position: absolute;
};

@include f-indicator(
    $block: '.f-checkbox',
);

// Indicator > Disabled
@include f-indicator(
    $block: '.f-checkbox',
    $state: ':disabled',
) {
    // color: $f-text-color-disabled !important;
    color: red !important;
}

@include f-message(
    $block: '.f-checkbox',
);